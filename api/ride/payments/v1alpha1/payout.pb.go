// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0
// 	protoc        (unknown)
// source: ride/payments/v1alpha1/payout.proto

package v1alpha1

import (
	reflect "reflect"
	sync "sync"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Payout_Status int32

const (
	Payout_STATUS_UNSPECIFIED Payout_Status = 0
	Payout_STATUS_PENDING     Payout_Status = 1
	Payout_STATUS_SUCCESS     Payout_Status = 2
	Payout_STATUS_FAILED      Payout_Status = 3
)

// Enum value maps for Payout_Status.
var (
	Payout_Status_name = map[int32]string{
		0: "STATUS_UNSPECIFIED",
		1: "STATUS_PENDING",
		2: "STATUS_SUCCESS",
		3: "STATUS_FAILED",
	}
	Payout_Status_value = map[string]int32{
		"STATUS_UNSPECIFIED": 0,
		"STATUS_PENDING":     1,
		"STATUS_SUCCESS":     2,
		"STATUS_FAILED":      3,
	}
)

func (x Payout_Status) Enum() *Payout_Status {
	p := new(Payout_Status)
	*p = x
	return p
}

func (x Payout_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Payout_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_ride_payments_v1alpha1_payout_proto_enumTypes[0].Descriptor()
}

func (Payout_Status) Type() protoreflect.EnumType {
	return &file_ride_payments_v1alpha1_payout_proto_enumTypes[0]
}

func (x Payout_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Payout_Status.Descriptor instead.
func (Payout_Status) EnumDescriptor() ([]byte, []int) {
	return file_ride_payments_v1alpha1_payout_proto_rawDescGZIP(), []int{0, 0}
}

type Payout struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Relative resource name of Payout, for example: "users/user1/wallet/payouts/payout1"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The amount of money to be charged in the smallest currency unit. **Must** be greater than 0. For example, $1.75 must be represented as 175.
	Amount int32 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// Output only. Current status of the Payout.
	Status Payout_Status `protobuf:"varint,3,opt,name=status,proto3,enum=ride.payments.v1alpha1.Payout_Status" json:"status,omitempty"`
	// Output only. Timestamp when the Payout was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Timestamp when the Payout was created.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Output only. Timestamp when the Payout was last updated.
	//
	// Types that are assignable to Metadata:
	//
	//	*Payout_TransactionId
	//	*Payout_FailureReason
	Metadata isPayout_Metadata `protobuf_oneof:"metadata"`
}

func (x *Payout) Reset() {
	*x = Payout{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ride_payments_v1alpha1_payout_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payout) ProtoMessage() {}

func (x *Payout) ProtoReflect() protoreflect.Message {
	mi := &file_ride_payments_v1alpha1_payout_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payout.ProtoReflect.Descriptor instead.
func (*Payout) Descriptor() ([]byte, []int) {
	return file_ride_payments_v1alpha1_payout_proto_rawDescGZIP(), []int{0}
}

func (x *Payout) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Payout) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Payout) GetStatus() Payout_Status {
	if x != nil {
		return x.Status
	}
	return Payout_STATUS_UNSPECIFIED
}

func (x *Payout) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Payout) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (m *Payout) GetMetadata() isPayout_Metadata {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (x *Payout) GetTransactionId() string {
	if x, ok := x.GetMetadata().(*Payout_TransactionId); ok {
		return x.TransactionId
	}
	return ""
}

func (x *Payout) GetFailureReason() string {
	if x, ok := x.GetMetadata().(*Payout_FailureReason); ok {
		return x.FailureReason
	}
	return ""
}

type isPayout_Metadata interface {
	isPayout_Metadata()
}

type Payout_TransactionId struct {
	// Relative resource name of the transaction accociated with the Payout. Only available when Payout.status is STATUS_SUCCESS
	TransactionId string `protobuf:"bytes,6,opt,name=transaction_id,json=transactionId,proto3,oneof"`
}

type Payout_FailureReason struct {
	// Only available when status is STATUS_FAILED
	FailureReason string `protobuf:"bytes,7,opt,name=failure_reason,json=failureReason,proto3,oneof"`
}

func (*Payout_TransactionId) isPayout_Metadata() {}

func (*Payout_FailureReason) isPayout_Metadata() {}

type PayoutAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Relative resource name of PayoutAccount, for example: "users/user1/wallet/payout-account"
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The currency code of the PayoutAccount. For example, "INR".
	CurrencyCode string `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	// Types that are assignable to Destination:
	//
	//	*PayoutAccount_BankAccount_
	//	*PayoutAccount_UpiId
	Destination       isPayoutAccount_Destination `protobuf_oneof:"destination"`
	RazorpayContactId string                      `protobuf:"bytes,7,opt,name=razorpay_contact_id,json=razorpayContactId,proto3" json:"razorpay_contact_id,omitempty"`
	// Output only. Timestamp when the PayoutAccount was created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Output only. Timestamp when the PayoutAccount was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
}

func (x *PayoutAccount) Reset() {
	*x = PayoutAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ride_payments_v1alpha1_payout_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutAccount) ProtoMessage() {}

func (x *PayoutAccount) ProtoReflect() protoreflect.Message {
	mi := &file_ride_payments_v1alpha1_payout_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutAccount.ProtoReflect.Descriptor instead.
func (*PayoutAccount) Descriptor() ([]byte, []int) {
	return file_ride_payments_v1alpha1_payout_proto_rawDescGZIP(), []int{1}
}

func (x *PayoutAccount) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PayoutAccount) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (m *PayoutAccount) GetDestination() isPayoutAccount_Destination {
	if m != nil {
		return m.Destination
	}
	return nil
}

func (x *PayoutAccount) GetBankAccount() *PayoutAccount_BankAccount {
	if x, ok := x.GetDestination().(*PayoutAccount_BankAccount_); ok {
		return x.BankAccount
	}
	return nil
}

func (x *PayoutAccount) GetUpiId() string {
	if x, ok := x.GetDestination().(*PayoutAccount_UpiId); ok {
		return x.UpiId
	}
	return ""
}

func (x *PayoutAccount) GetRazorpayContactId() string {
	if x != nil {
		return x.RazorpayContactId
	}
	return ""
}

func (x *PayoutAccount) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *PayoutAccount) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

type isPayoutAccount_Destination interface {
	isPayoutAccount_Destination()
}

type PayoutAccount_BankAccount_ struct {
	// The bank account information of the PayoutAccount.
	BankAccount *PayoutAccount_BankAccount `protobuf:"bytes,3,opt,name=bank_account,json=bankAccount,proto3,oneof"`
}

type PayoutAccount_UpiId struct {
	// The UPI ID of the PayoutAccount.
	UpiId string `protobuf:"bytes,4,opt,name=upi_id,json=upiId,proto3,oneof"`
}

func (*PayoutAccount_BankAccount_) isPayoutAccount_Destination() {}

func (*PayoutAccount_UpiId) isPayoutAccount_Destination() {}

type PayoutAccount_BankAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The bank account holder name of the PayoutAccount.
	HolderName string `protobuf:"bytes,1,opt,name=holder_name,json=holderName,proto3" json:"holder_name,omitempty"`
	// The bank account number of the PayoutAccount.
	AccountNumber string `protobuf:"bytes,2,opt,name=account_number,json=accountNumber,proto3" json:"account_number,omitempty"`
	// The bank account ifsc code of the PayoutAccount.
	IfscCode string `protobuf:"bytes,3,opt,name=ifsc_code,json=ifscCode,proto3" json:"ifsc_code,omitempty"`
}

func (x *PayoutAccount_BankAccount) Reset() {
	*x = PayoutAccount_BankAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ride_payments_v1alpha1_payout_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayoutAccount_BankAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayoutAccount_BankAccount) ProtoMessage() {}

func (x *PayoutAccount_BankAccount) ProtoReflect() protoreflect.Message {
	mi := &file_ride_payments_v1alpha1_payout_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayoutAccount_BankAccount.ProtoReflect.Descriptor instead.
func (*PayoutAccount_BankAccount) Descriptor() ([]byte, []int) {
	return file_ride_payments_v1alpha1_payout_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PayoutAccount_BankAccount) GetHolderName() string {
	if x != nil {
		return x.HolderName
	}
	return ""
}

func (x *PayoutAccount_BankAccount) GetAccountNumber() string {
	if x != nil {
		return x.AccountNumber
	}
	return ""
}

func (x *PayoutAccount_BankAccount) GetIfscCode() string {
	if x != nil {
		return x.IfscCode
	}
	return ""
}

var File_ride_payments_v1alpha1_payout_proto protoreflect.FileDescriptor

var file_ride_payments_v1alpha1_payout_proto_rawDesc = []byte{
	0x0a, 0x23, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2f,
	0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2f, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x16, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x03, 0x0a, 0x06,
	0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12, 0x52, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x3e, 0xba, 0x48, 0x3b, 0xd0, 0x01, 0x01, 0x72, 0x36, 0x32, 0x34,
	0x5e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d,
	0x39, 0x5f, 0x2d, 0x5d, 0x2b, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x79,
	0x6f, 0x75, 0x74, 0x73, 0x2f, 0x5b, 0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5f,
	0x2d, 0x5d, 0x2b, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x06, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x42, 0x07, 0xba, 0x48, 0x04, 0x1a,
	0x02, 0x20, 0x00, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x72, 0x69,
	0x64, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c,
	0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x27, 0x0a,
	0x0e, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x5b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x12, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x54, 0x41, 0x54,
	0x55, 0x53, 0x5f, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e,
	0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45,
	0x44, 0x10, 0x03, 0x42, 0x0a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22,
	0xa7, 0x04, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x47, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x33, 0xba, 0x48, 0x30, 0x72, 0x2e, 0x32, 0x2c, 0x5e, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x5b,
	0x41, 0x2d, 0x5a, 0x61, 0x2d, 0x7a, 0x30, 0x2d, 0x39, 0x5f, 0x2d, 0x5d, 0x2b, 0x2f, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x2f, 0x70, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x2d, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x24, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x72, 0x05, 0x52, 0x03, 0x49, 0x4e, 0x52, 0x52, 0x0c, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x56, 0x0a, 0x0c, 0x62,
	0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x31, 0x2e, 0x72, 0x69, 0x64, 0x65, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x2e, 0x50, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x2e, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x62, 0x61, 0x6e, 0x6b, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x75, 0x70, 0x69, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x75, 0x70, 0x69, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13,
	0x72, 0x61, 0x7a, 0x6f, 0x72, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x61, 0x7a, 0x6f, 0x72,
	0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x0b,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x1a, 0x72, 0x0a, 0x0b, 0x42, 0x61, 0x6e, 0x6b, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x6f, 0x6c, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x66, 0x73, 0x63, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x66, 0x73, 0x63, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x41, 0x5a, 0x3f, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x2d, 0x61, 0x70, 0x70,
	0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x69, 0x64, 0x65, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x2f, 0x76, 0x31, 0x61, 0x6c, 0x70, 0x68, 0x61, 0x31, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ride_payments_v1alpha1_payout_proto_rawDescOnce sync.Once
	file_ride_payments_v1alpha1_payout_proto_rawDescData = file_ride_payments_v1alpha1_payout_proto_rawDesc
)

func file_ride_payments_v1alpha1_payout_proto_rawDescGZIP() []byte {
	file_ride_payments_v1alpha1_payout_proto_rawDescOnce.Do(func() {
		file_ride_payments_v1alpha1_payout_proto_rawDescData = protoimpl.X.CompressGZIP(file_ride_payments_v1alpha1_payout_proto_rawDescData)
	})
	return file_ride_payments_v1alpha1_payout_proto_rawDescData
}

var file_ride_payments_v1alpha1_payout_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ride_payments_v1alpha1_payout_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_ride_payments_v1alpha1_payout_proto_goTypes = []interface{}{
	(Payout_Status)(0),                // 0: ride.payments.v1alpha1.Payout.Status
	(*Payout)(nil),                    // 1: ride.payments.v1alpha1.Payout
	(*PayoutAccount)(nil),             // 2: ride.payments.v1alpha1.PayoutAccount
	(*PayoutAccount_BankAccount)(nil), // 3: ride.payments.v1alpha1.PayoutAccount.BankAccount
	(*timestamppb.Timestamp)(nil),     // 4: google.protobuf.Timestamp
}
var file_ride_payments_v1alpha1_payout_proto_depIdxs = []int32{
	0, // 0: ride.payments.v1alpha1.Payout.status:type_name -> ride.payments.v1alpha1.Payout.Status
	4, // 1: ride.payments.v1alpha1.Payout.create_time:type_name -> google.protobuf.Timestamp
	4, // 2: ride.payments.v1alpha1.Payout.update_time:type_name -> google.protobuf.Timestamp
	3, // 3: ride.payments.v1alpha1.PayoutAccount.bank_account:type_name -> ride.payments.v1alpha1.PayoutAccount.BankAccount
	4, // 4: ride.payments.v1alpha1.PayoutAccount.create_time:type_name -> google.protobuf.Timestamp
	4, // 5: ride.payments.v1alpha1.PayoutAccount.update_time:type_name -> google.protobuf.Timestamp
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_ride_payments_v1alpha1_payout_proto_init() }
func file_ride_payments_v1alpha1_payout_proto_init() {
	if File_ride_payments_v1alpha1_payout_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ride_payments_v1alpha1_payout_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payout); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ride_payments_v1alpha1_payout_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ride_payments_v1alpha1_payout_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayoutAccount_BankAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ride_payments_v1alpha1_payout_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Payout_TransactionId)(nil),
		(*Payout_FailureReason)(nil),
	}
	file_ride_payments_v1alpha1_payout_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*PayoutAccount_BankAccount_)(nil),
		(*PayoutAccount_UpiId)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ride_payments_v1alpha1_payout_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ride_payments_v1alpha1_payout_proto_goTypes,
		DependencyIndexes: file_ride_payments_v1alpha1_payout_proto_depIdxs,
		EnumInfos:         file_ride_payments_v1alpha1_payout_proto_enumTypes,
		MessageInfos:      file_ride_payments_v1alpha1_payout_proto_msgTypes,
	}.Build()
	File_ride_payments_v1alpha1_payout_proto = out.File
	file_ride_payments_v1alpha1_payout_proto_rawDesc = nil
	file_ride_payments_v1alpha1_payout_proto_goTypes = nil
	file_ride_payments_v1alpha1_payout_proto_depIdxs = nil
}
