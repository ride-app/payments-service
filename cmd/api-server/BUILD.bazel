load("@container_structure_test//:defs.bzl", "container_structure_test")
load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")
load("@rules_oci//oci:defs.bzl", "oci_image", "oci_tarball")
load("@rules_pkg//:pkg.bzl", "pkg_tar")

go_library(
    name = "api-server_lib",
    srcs = [
        "main.go",
        "wire_gen.go",
    ],
    importpath = "github.com/ride-app/payments-service/cmd/api-server",
    visibility = ["//visibility:private"],
    deps = [
        "//api/ride/payments/v1alpha1/v1alpha1connect",
        "//config",
        "//internal/api-handlers",
        "//internal/repositories/auth",
        "//internal/repositories/payout",
        "//internal/repositories/recharge",
        "//internal/repositories/transfer",
        "//internal/repositories/wallet",
        "//third-party",
        "@com_connectrpc_authn//:authn",
        "@com_connectrpc_connect//:connect",
        "@com_github_dragonfish_go_v2//pkg/connect/interceptors",
        "@com_github_dragonfish_go_v2//pkg/connect/middlewares",
        "@com_github_dragonfish_go_v2//pkg/logger",
        "@org_golang_x_net//http2",
        "@org_golang_x_net//http2/h2c",
    ],
)

go_binary(
    name = "api-server",
    embed = [":api-server_lib"],
    goarch = "amd64",
    goos = "linux",
    pure = "on",
    visibility = ["//visibility:public"],
    x_defs = {"google.golang.org/protobuf/reflect/protoregistry.conflictPolicy": "warn"},
)

pkg_tar(
    name = "tar_layer",
    srcs = [":api-server"],
    owner = "65532.65532",
    package_dir = "home/nonroot",
)

oci_image(
    name = "image",
    base = "@distroless",
    entrypoint = ["./api-server"],
    exposed_ports = ["50051/tcp"],
    tars = [":tar_layer"],
)

oci_tarball(
    name = "container",
    image = ":image",
    repo_tags = ["api-server:latest"],
)

container_structure_test(
    name = "container_structure_test",
    configs = ["container_structure_test.yaml"],
    image = ":image",
)
