// @generated by protobuf-ts 2.2.1
// @generated from protobuf file "ride/wallet/v1/wallet_service.proto" (package "ride.wallet.v1", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { WalletService } from "./wallet_service";
import type { ListTransactionsByAccountIdResponse } from "./wallet_service";
import type { ListTransactionsByAccountIdRequest } from "./wallet_service";
import type { ListTransactionsByBatchIdResponse } from "./wallet_service";
import type { ListTransactionsByBatchIdRequest } from "./wallet_service";
import type { GetTransactionResponse } from "./wallet_service";
import type { GetTransactionRequest } from "./wallet_service";
import type { CreateTransactionsResponse } from "./wallet_service";
import type { CreateTransactionsRequest } from "./wallet_service";
import type { GetAccountByUidResponse } from "./wallet_service";
import type { GetAccountByUidRequest } from "./wallet_service";
import type { GetAccountResponse } from "./wallet_service";
import type { GetAccountRequest } from "./wallet_service";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CreateAccountResponse } from "./wallet_service";
import type { CreateAccountRequest } from "./wallet_service";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service ride.wallet.v1.WalletService
 */
export interface IWalletServiceClient {
    /**
     * Account related methods
     *
     * @generated from protobuf rpc: CreateAccount(ride.wallet.v1.CreateAccountRequest) returns (ride.wallet.v1.CreateAccountResponse);
     */
    createAccount(input: CreateAccountRequest, options?: RpcOptions): UnaryCall<CreateAccountRequest, CreateAccountResponse>;
    /**
     * @generated from protobuf rpc: GetAccount(ride.wallet.v1.GetAccountRequest) returns (ride.wallet.v1.GetAccountResponse);
     */
    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, GetAccountResponse>;
    /**
     * @generated from protobuf rpc: GetAccountByUid(ride.wallet.v1.GetAccountByUidRequest) returns (ride.wallet.v1.GetAccountByUidResponse);
     */
    getAccountByUid(input: GetAccountByUidRequest, options?: RpcOptions): UnaryCall<GetAccountByUidRequest, GetAccountByUidResponse>;
    /**
     * Transaction related methods
     *
     * @generated from protobuf rpc: CreateTransactions(ride.wallet.v1.CreateTransactionsRequest) returns (ride.wallet.v1.CreateTransactionsResponse);
     */
    createTransactions(input: CreateTransactionsRequest, options?: RpcOptions): UnaryCall<CreateTransactionsRequest, CreateTransactionsResponse>;
    /**
     * @generated from protobuf rpc: GetTransaction(ride.wallet.v1.GetTransactionRequest) returns (ride.wallet.v1.GetTransactionResponse);
     */
    getTransaction(input: GetTransactionRequest, options?: RpcOptions): UnaryCall<GetTransactionRequest, GetTransactionResponse>;
    /**
     * @generated from protobuf rpc: ListTransactionsByBatchId(ride.wallet.v1.ListTransactionsByBatchIdRequest) returns (ride.wallet.v1.ListTransactionsByBatchIdResponse);
     */
    listTransactionsByBatchId(input: ListTransactionsByBatchIdRequest, options?: RpcOptions): UnaryCall<ListTransactionsByBatchIdRequest, ListTransactionsByBatchIdResponse>;
    /**
     * @generated from protobuf rpc: ListTransactionsByAccountId(ride.wallet.v1.ListTransactionsByAccountIdRequest) returns (ride.wallet.v1.ListTransactionsByAccountIdResponse);
     */
    listTransactionsByAccountId(input: ListTransactionsByAccountIdRequest, options?: RpcOptions): UnaryCall<ListTransactionsByAccountIdRequest, ListTransactionsByAccountIdResponse>;
}
/**
 * @generated from protobuf service ride.wallet.v1.WalletService
 */
export class WalletServiceClient implements IWalletServiceClient, ServiceInfo {
    typeName = WalletService.typeName;
    methods = WalletService.methods;
    options = WalletService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * Account related methods
     *
     * @generated from protobuf rpc: CreateAccount(ride.wallet.v1.CreateAccountRequest) returns (ride.wallet.v1.CreateAccountResponse);
     */
    createAccount(input: CreateAccountRequest, options?: RpcOptions): UnaryCall<CreateAccountRequest, CreateAccountResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateAccountRequest, CreateAccountResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAccount(ride.wallet.v1.GetAccountRequest) returns (ride.wallet.v1.GetAccountResponse);
     */
    getAccount(input: GetAccountRequest, options?: RpcOptions): UnaryCall<GetAccountRequest, GetAccountResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAccountRequest, GetAccountResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAccountByUid(ride.wallet.v1.GetAccountByUidRequest) returns (ride.wallet.v1.GetAccountByUidResponse);
     */
    getAccountByUid(input: GetAccountByUidRequest, options?: RpcOptions): UnaryCall<GetAccountByUidRequest, GetAccountByUidResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetAccountByUidRequest, GetAccountByUidResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * Transaction related methods
     *
     * @generated from protobuf rpc: CreateTransactions(ride.wallet.v1.CreateTransactionsRequest) returns (ride.wallet.v1.CreateTransactionsResponse);
     */
    createTransactions(input: CreateTransactionsRequest, options?: RpcOptions): UnaryCall<CreateTransactionsRequest, CreateTransactionsResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<CreateTransactionsRequest, CreateTransactionsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetTransaction(ride.wallet.v1.GetTransactionRequest) returns (ride.wallet.v1.GetTransactionResponse);
     */
    getTransaction(input: GetTransactionRequest, options?: RpcOptions): UnaryCall<GetTransactionRequest, GetTransactionResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<GetTransactionRequest, GetTransactionResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListTransactionsByBatchId(ride.wallet.v1.ListTransactionsByBatchIdRequest) returns (ride.wallet.v1.ListTransactionsByBatchIdResponse);
     */
    listTransactionsByBatchId(input: ListTransactionsByBatchIdRequest, options?: RpcOptions): UnaryCall<ListTransactionsByBatchIdRequest, ListTransactionsByBatchIdResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListTransactionsByBatchIdRequest, ListTransactionsByBatchIdResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListTransactionsByAccountId(ride.wallet.v1.ListTransactionsByAccountIdRequest) returns (ride.wallet.v1.ListTransactionsByAccountIdResponse);
     */
    listTransactionsByAccountId(input: ListTransactionsByAccountIdRequest, options?: RpcOptions): UnaryCall<ListTransactionsByAccountIdRequest, ListTransactionsByAccountIdResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<ListTransactionsByAccountIdRequest, ListTransactionsByAccountIdResponse>("unary", this._transport, method, opt, input);
    }
}
